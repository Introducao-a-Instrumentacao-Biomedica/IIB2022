// Codigo para balança com 4 celulas de cargas utilizando um aplificador HN711 e um ESP32

#include "HX711.h"									//Biblioteca do amplificador

#define DT 18			
#define SCK 19
 
HX711 escala;    // Relaciona a variável escala
 
void setup() {
  escala.begin (DT, SCK);
  Serial.begin(9600);
  Serial.print("Leitura da Tara:  ");
  Serial.println(escala.read());  							//Aguarda o termino de verificação do peso
  Serial.println("Aguarde!");
  Serial.println("Iniciando ...");
  escala.set_scale(784175);             						// Utiliza uma escala padrão de verificação
 
  escala.tare(0.360);                							// Fixa o peso como tara
  Serial.println("Insira o item para pesar:"); 
}
 
void loop() {
  Serial.print("Valor da Leitura:  ");
  Serial.println(escala.get_value(10), 3);  					// Retorna peso descontando a tara
  delay(100);
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------

// Código para o motor de passo 
#include <Stepper.h>
 
#define STEPS 32
 
#define IN1  11
#define IN2  10
#define IN3   9
#define IN4   8
 
Stepper stepper(STEPS, IN4, IN2, IN3, IN1);
 
#define joystick  A0
 
void setup()
{
  
}
 
void loop()
{

  int val = analogRead(joystick);
 
  //o motor nao funciona se o joystick estiver parado
  if(  (val > 500) && (val < 523) )
  {
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
  }
 
  else
  {
    // move o motor na direção do controle
    while (val >= 523)
    {
      // define a velocidade 
      int speed_ = map(val, 523, 1023, 5, 500);
      // set motor speed
      stepper.setSpeed(speed_);
      // move the motor (1 step)
      stepper.step(1);
      val = analogRead(joystick);
    }
 
    // move na outra direção
    while (val <= 500)
    {
      // define a velocidade
      int speed_ = map(val, 500, 0, 5, 500);
      stepper.setSpeed(speed_);
      stepper.step(-1);
      val = analogRead(joystick);
    }
 
  }
 
}
